import { Tileset } from "../../../artTypes/world";
import { PhaserLayer } from "../createPhaserLayer";
import { createNoise2D } from "simplex-noise";

const LAYER1 = [
  [
    32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
    32, 32, 32, 32, 32, 32, 36, 32, 32, 32, 32, 32, 32,
  ],
  [
    32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
    32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
  ],
  [
    32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
    32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
  ],
  [
    32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
    32, 32, 32, 16, 32, 32, 32, 32, 32, 32, 32, 32, 32,
  ],
  [
    32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 16, 32, 32, 32, 32, 16, 32,
    32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
  ],
  [
    32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
    32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
  ],
  [
    32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 4, 4, 4, 4, 4, 4,
    32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
  ],
  [
    32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 4, 4, 4, 4, 4, 4,
    32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
  ],
  [
    32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 4, 4, 4, 4, 4, 4,
    32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
  ],
  [
    32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 17, 4, 4, 4, 4, 19,
    32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
  ],
  [
    32, 80, 32, 80, 32, 80, 32, 36, 32, 32, 32, 32, 32, 32, 17, 4, 4, 4, 4, 19,
    32, 32, 32, 32, 32, 32, 16, 16, 16, 16, 16, 16,
  ],
  [
    32, 32, 32, 32, 32, 32, 48, 36, 32, 32, 32, 32, 32, 32, 17, 4, 4, 4, 4, 19,
    32, 32, 32, 16, 16, 16, 16, 16, 16, 16, 16, 16,
  ],
  [
    32, 32, 32, 32, 32, 32, 32, 68, 32, 32, 32, 32, 32, 32, 17, 4, 4, 4, 20, 19,
    16, 16, 16, 16, 16, 16, 20, 20, 20, 20, 20, 20,
  ],
  [
    32, 32, 32, 32, 32, 32, 32, 32, 32, 1, 3, 32, 32, 1, 52, 52, 4, 4, 4, 19,
    16, 16, 16, 16, 16, 16, 36, 20, 20, 20, 20, 20,
  ],
  [
    32, 32, 32, 32, 32, 32, 48, 32, 1, 66, 19, 16, 16, 17, 52, 52, 20, 52, 52,
    65, 3, 16, 1, 2, 2, 2, 36, 20, 20, 20, 20, 20,
  ],
  [
    32, 32, 32, 32, 32, 48, 1, 2, 20, 20, 65, 3, 1, 66, 52, 20, 20, 52, 20, 20,
    65, 2, 66, 4, 20, 36, 36, 20, 20, 20, 20, 20,
  ],
  [
    32, 32, 32, 32, 32, 16, 33, 52, 4, 4, 4, 4, 20, 20, 52, 52, 49, 34, 50, 20,
    20, 20, 52, 4, 4, 36, 36, 20, 20, 20, 20, 20,
  ],
  [
    32, 32, 32, 32, 48, 48, 48, 33, 4, 20, 52, 4, 20, 20, 20, 49, 35, 16, 33, 4,
    4, 4, 4, 4, 20, 36, 36, 20, 20, 20, 20, 20,
  ],
  [
    32, 32, 32, 32, 32, 48, 32, 32, 17, 20, 4, 52, 20, 52, 18, 19, 16, 16, 16,
    34, 52, 52, 52, 20, 20, 36, 36, 20, 20, 20, 20, 20,
  ],
  [
    32, 32, 32, 32, 32, 32, 32, 32, 17, 4, 20, 52, 20, 20, 18, 19, 16, 16, 16,
    16, 34, 34, 50, 20, 20, 36, 36, 20, 20, 20, 20, 20,
  ],
  [
    32, 48, 48, 32, 32, 32, 32, 1, 52, 52, 20, 52, 49, 35, 33, 35, 16, 16, 16,
    16, 16, 16, 33, 34, 34, 34, 36, 20, 20, 20, 20, 20,
  ],
  [
    48, 48, 32, 32, 32, 32, 1, 52, 18, 52, 52, 18, 35, 16, 16, 16, 16, 16, 16,
    16, 16, 16, 16, 16, 16, 16, 36, 20, 20, 20, 20, 20,
  ],
  [
    48, 48, 32, 32, 48, 48, 33, 34, 50, 52, 18, 19, 16, 16, 16, 16, 16, 16, 16,
    16, 48, 48, 16, 16, 16, 16, 16, 36, 36, 36, 36, 36,
  ],
  [
    48, 32, 32, 48, 48, 48, 48, 48, 17, 52, 52, 52, 3, 16, 16, 16, 16, 16, 16,
    48, 48, 48, 48, 48, 16, 16, 16, 16, 16, 16, 16, 16,
  ],
  [
    32, 32, 32, 48, 48, 48, 48, 48, 17, 18, 18, 18, 19, 32, 16, 16, 16, 16, 16,
    48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48,
  ],
  [
    32, 32, 32, 48, 48, 48, 48, 1, 52, 20, 52, 52, 20, 16, 16, 16, 16, 4, 16,
    16, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48,
  ],
  [
    32, 32, 32, 32, 48, 48, 1, 52, 52, 52, 52, 52, 52, 52, 65, 3, 52, 20, 32,
    32, 32, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48,
  ],
  [
    48, 48, 48, 48, 48, 48, 48, 33, 20, 20, 52, 52, 16, 16, 20, 20, 52, 52, 32,
    32, 32, 32, 16, 48, 48, 48, 48, 48, 48, 48, 48, 48,
  ],
  [
    48, 48, 48, 48, 48, 48, 48, 48, 17, 20, 20, 52, 16, 16, 52, 52, 20, 20, 32,
    32, 32, 32, 16, 16, 48, 48, 48, 48, 48, 48, 48, 48,
  ],
  [
    32, 64, 48, 48, 64, 64, 32, 32, 16, 16, 36, 36, 36, 36, 36, 36, 36, 36, 36,
    36, 36, 36, 36, 16, 16, 16, 48, 48, 48, 48, 48, 48,
  ],
  [
    32, 32, 64, 64, 64, 64, 16, 32, 32, 16, 16, 16, 16, 36, 36, 36, 36, 36, 36,
    36, 36, 36, 36, 36, 36, 16, 16, 16, 16, 48, 48, 48,
  ],
  [
    32, 16, 16, 80, 80, 80, 80, 80, 80, 80, 32, 32, 16, 16, 16, 36, 36, 36, 36,
    36, 36, 36, 36, 36, 16, 16, 16, 16, 16, 16, 48, 48,
  ],
  [
    16, 32, 80, 80, 64, 64, 16, 16, 16, 80, 80, 80, 32, 32, 16, 16, 36, 36, 36,
    36, 36, 4, 36, 16, 16, 16, 16, 16, 16, 16, 16, 16,
  ],
];

const LAYER_WIDTH = 32;
const LAYER_HEIGHT = 33;

export function createMapSystem(layer: PhaserLayer) {
  const {
    scenes: {
      Main: {
        objectPool,
        maps: {
          Main: { putTileAt },
        },
      },
    },
  } = layer;

  for (let x = 0; x < LAYER_WIDTH; x++) {
    for (let y = 0; y < LAYER_HEIGHT; y++) {
      const coord = { x, y };
      const spriteNr = LAYER1[y][x];

      if (spriteNr >= 0) {
        putTileAt(coord, spriteNr, "Background");
      }
    }
  }

  const asd = objectPool.get("asd", "Sprite");

  asd.setComponent({
    id: "mapss",
    once: (sprite) => {
      sprite.setTexture("Victory");
      sprite.setPosition(0, 0);
    },
  });
}
